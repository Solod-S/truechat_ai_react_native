import { GoogleGenerativeAI } from "@google/generative-ai";

const apiKey = process.env.EXPO_PUBLIC_GOOGLE_AI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);
const MAX_HISTORY_LENGTH = 5;

const model = genAI.getGenerativeModel({
  model: "gemini-1.5-pro-latest",
});

const generationConfig = {
  temperature: 0.7,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 4096,
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø—É—Å—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ä–∞–Ω–µ–µ
export const chatSession = model.startChat({
  generationConfig,
  history: [],
});

let specializationAdded = false;

export async function getGoogleAIResponse(text, firsRender, specialization) {
  try {
    if (!chatSession.history || firsRender) {
      chatSession.history = [];
      specializationAdded = false; // —Å–±—Ä–æ—Å–∏–º —Ñ–ª–∞–≥ –ø—Ä–∏ –Ω–æ–≤–æ–º –∑–∞–ø—É—Å–∫–µ —Å–µ—Å—Å–∏–∏
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤ –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞
    if (specialization && !specializationAdded) {
      chatSession.history.push({
        role: "system",
        parts: [
          {
            text: `You are a bot specialized in ${specialization}. Please answer as if you are an expert in this field.`,
          },
        ],
      });
      specializationAdded = true; // —Å—Ç–∞–≤–∏–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
    chatSession.history.push({
      role: "user",
      parts: [{ text: text }],
    });

    // –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è
    if (chatSession.history.length > MAX_HISTORY_LENGTH * 2) {
      chatSession.history = chatSession.history.slice(-MAX_HISTORY_LENGTH * 2);
    }

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏
    const result = await chatSession.sendMessage(text);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
    chatSession.history.push({
      role: "model",
      parts: [{ text: result.response.text() }],
    });

    return { success: true, content: result.response.text() };
  } catch (error) {
    console.log("Error in getGoogleAIResponse:", error);
    return {
      success: true,
      content:
        "ü§ñ The bot is currently overloaded ‚ö°Ô∏è. Please try again later üôè.",
    };
  }
}
